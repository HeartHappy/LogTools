plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
}
group("com.hearthappy")
version("1.0.5")


task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set("javadoc")
    from javadoc.destinationDir
}


task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set("sources")
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId = 'com.hearthappy.logtools'
                artifactId = 'logtools'
                version = '1.0.5'
                artifacts {
                    archives(javadocJar)
                    archives(sourceJar)
                }
            }
            //添加如下代码，还会生成一个debug版的库
            /*debug(MavenPublication){
                from components.debug

                groupId = 'com.hearthappy.ktorexpand'
                artifactId = 'ktor-expand-debug'
                version = '1.0.0'
            }*/
        }
    }
}


android {
    namespace 'com.hearthappy.logs'
    compileSdk 31

    defaultConfig {
        minSdk 21

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    // 处理 jar 任务中的重复文件
    tasks.withType(Jar).configureEach {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    }

    // 处理资源处理任务中的重复文件
    tasks.withType(ProcessResources).tap {
        configureEach {
            duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        }
    }
}

dependencies {
    testImplementation(libs.junit)
    androidTestImplementation(libs.androidx.junit)
    androidTestImplementation(libs.androidx.espresso.core.v340)
    implementation libs.androidx.appcompat
}
